[versions]

grpcMultiplatformLib = "0.4.0"
kamelImage = "0.9.3"
kotlin = "1.9.22"
compose = "1.6.0"
agp = "7.4.2"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.8.2"
okhttp_grpc = "1.62.2"
compose-uitooling = "1.6.2"
composeImageLoader = "1.7.1"
buildConfig = "5.3.5"
kotlinx-coroutines = "1.8.0"
kotlinx-serialization = "1.6.3"
kotlinx-datetime = "0.5.0"
multiplatformSettings = "1.1.1"
koin = "3.6.0-wasm-alpha2"
sqlDelight = "2.0.1"
splashscreen = "1.0.1"
accompanist_version = "0.28.0"

firebaseMessagingKtx = "23.4.1"
firebaseMessaging = "23.4.1"
firebaseCore = "21.1.1"
androidx_security = "1.1.0-alpha06"

decompose_version = "3.0.0-alpha08"

grpcKmp = "0.4.0"
protobufKotlin = "3.25.3"
grpcProtobuf = "1.61.1"
grpcKotlinStub = "1.4.1"

windowsRegistryUtil = "0.3"

barcodeScanning = "17.2.0"
cameraExtensions = "1.3.1"
cameraVideo = "1.3.1"
cameraView = "1.3.1"
cameraLifecycle = "1.3.1"
cameraCamera2 = "1.3.1"
guava = "29.0-android"
zxing = "3.5.0"

# backend
bcprovJdk16 = "1.46"
turbine = "1.0.0"
firebaseAdmin = "9.1.1"
grpcTesting = "1.51.0"
jjwtOrgjson = "0.11.5"
jjwtImpl = "0.11.5"
jjwtApi = "0.11.5"
jodaTime = "2.10.5"
kmongoCoroutine = "4.7.2"
kmongoAsync = "4.7.2"
kmongo = "4.7.2"
mail = "1.5.0-b01"
thymeleaf = "3.1.1.RELEASE"
bcrypt = "0.9.0"
netty_shaded = "1.61.1"


[libraries]
grpc-multiplatform-lib = { module = "io.github.timortel:grpc-multiplatform-lib", version.ref = "grpcMultiplatformLib" }
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }
securitycrypto = { module = "androidx.security:security-crypto-ktx", version.ref = "androidx_security" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
splash_screen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }
grpc_okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "okhttp_grpc" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-js = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlDelight" }
sqlDelight-driver-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }

protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobufKotlin" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobufKotlin" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpcProtobuf" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpcProtobuf" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpcKotlinStub" }
grpc-testing = { module = "io.grpc:grpc-testing", version.ref = "grpcTesting" }
jjwt-orgjson = { module = "io.jsonwebtoken:jjwt-orgjson", version.ref = "jjwtOrgjson" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwtImpl" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwtApi" }
joda-time = { module = "joda-time:joda-time", version.ref = "jodaTime" }

decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose_version" }
decompose-core-jvm = { module = "com.arkivanov.decompose:decompose-jvm", version.ref = "decompose_version" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose_version" }
windows-registry-util = { module = "com.github.sarxos:windows-registry-util", version.ref = "windowsRegistryUtil" }

firebase-messaging-ktx = { module = "com.google.firebase:firebase-messaging-ktx", version.ref = "firebaseMessagingKtx" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging", version.ref = "firebaseMessaging" }
firebase-core = { module = "com.google.firebase:firebase-core", version.ref = "firebaseCore" }
accompanist_permission = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist_version" }

barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "barcodeScanning" }
androidx-camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "cameraExtensions" }
androidx-camera-video = { module = "androidx.camera:camera-video", version.ref = "cameraVideo" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraView" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraLifecycle" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraCamera2" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing" }
zxing-javase = { module = "com.google.zxing:javase", version.ref = "zxing" }


# backend
kmongo-coroutine = { module = "org.litote.kmongo:kmongo-coroutine", version.ref = "kmongoCoroutine" }
kmongo-async = { module = "org.litote.kmongo:kmongo-async", version.ref = "kmongoAsync" }
kmongo = { module = "org.litote.kmongo:kmongo", version.ref = "kmongo" }
mail = { module = "javax.mail:mail", version.ref = "mail" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
bcprov-jdk16 = { module = "org.bouncycastle:bcprov-jdk16", version.ref = "bcprovJdk16" }
bcrypt = { module = "at.favre.lib:bcrypt", version.ref = "bcrypt" }
firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebaseAdmin" }
thymeleaf = { module = "org.thymeleaf:thymeleaf", version.ref = "thymeleaf" }
grpc_netty = { module = "io.grpc:grpc-netty-shaded", version.ref = "netty_shaded" }


[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
kotlin-native-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
grpcKmp = { id = "io.github.timortel.kotlin-multiplatform-grpc-plugin", version.ref = "grpcKmp" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
